# TODO: Define the Workflow Name
name: Final Project CI/CD Pipeline

# TODO: Define triggers for the workflow
on:
  push:
    branches: 
     - main
  pull_request:
    branches: 
     - main
    
jobs:
  # TODO: Define a job for building and testing the frontend
  frontend:
    runs-on: ubuntu-latest
    steps:
      # TODO: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2 

      # TODO: Setup Node.js
      - name: Setting up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # TODO: Install dependencies
      - name: Installing frontend dependencies
        working-directory: ./frontend
        run: npm install

      # TODO: Run tests
      - name: Running frontend tests
        working-directory: ./frontend
        run: npm run test

      # TODO: Build the React app
      - name: Building the React application
        working-directory: ./frontend
        run: npm run build

  # TODO: Define a job for building and testing the backend
  backend:
    runs-on: ubuntu-latest
    steps:
      # TODO: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2 

      # TODO: Setup Python
      - name: Setting up python
        uses: actions/setup-python@v2  
        with:
          python-version: 3.9  

      # TODO: Install dependencies
      - name: Installing dependencies
        working-directory: ./backend
        run: pip install -r requirements.txt

      # TODO: Run tests
      - name: Running tests
        working-directory: ./backend
        run: pytest

  # TODO: Define a job for building and pushing Docker images
  docker:
    # Run this job only when 'frontend' & 'backend' stages are sucessfully completed
    needs: 
      - frontend
      - backend
    runs-on: ubuntu-latest
    steps:
      # TODO: Checkout code
      - name: Checkout code
        uses: actions/checkout@v2

      # TODO: Setup Docker
      # Seting up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      
      # Setting up Docker Hub using Github secrets
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # TODO: Build frontend Docker image and deploy to Docker repository to run on multiple systems
      - name: Building the frontend Docker image and push it to Docker repostiory to run on multiple systems
        working-directory: ./frontend
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/devops-final-project:frontend-latest --push .

      # TODO: Build backend Docker image and push it to Docker repostiory to run on multiple systems
      - name: Building the backend Docker image and push it to Docker repostiory to run on multiple systems
        working-directory: ./backend
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/devops-final-project:backend-latest --push .

  # OPTIONAL: Define a deployment job (if applicable)
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      # TODO: Add deployment steps
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Deploying code to frontend Render web service
      - name: Deploying code to frontend web service in Render
        run: |
          curl -X POST ${{ secrets.RENDER_FRONTEND }} \
               -H "Content-Type: application/json" \
               -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"

      # Deploy code to backend Render web service
      - name: Deploying code to backend web service in Render
        run: |
          curl -X POST ${{ secrets.RENDER_BACKEND }} \
               -H "Content-Type: application/json" \
               -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"


      
